{"ast":null,"code":"const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nexport const getDateFromTimestamp = timestamp => {\n  const dueDate = new Date(timestamp);\n  let date = dueDate.getDate();\n  let month = dueDate.getMonth();\n  let year = dueDate.getFullYear();\n  const todayDate = new Date();\n  let currDate = todayDate.getDate();\n  let currMonth = todayDate.getMonth();\n  let currYear = todayDate.getFullYear();\n\n  if (currYear === year && currMonth === month && currDate === date) {\n    return \"Today\";\n  }\n\n  const yesterday = new Date(timestamp - 86400000);\n\n  if (yesterday.getMonth() === todayDate.getMonth() && yesterday.getDate() === todayDate.getDate()) {\n    return \"Tomorrow\";\n  }\n\n  date = date.toString();\n  if (date.length === 1) date = \"0\" + date;\n  month = (month + 1).toString();\n  if (month.length === 1) month = \"0\" + month;\n  return date + \"/\" + month + \"/\" + year;\n};\nexport const getTimeFromTimestamp = timestamp => {\n  const newDate = new Date(timestamp);\n  let hours = newDate.getHours();\n  let minutes = newDate.getMinutes().toString();\n  let notation = \"am\";\n\n  if (hours === 0) {\n    hours = 12;\n  } else if (hours > 12) {\n    hours -= 12;\n    notation = \"PM\";\n  }\n\n  hours = hours.toString(); // if (hours.length === 1) hours = \"0\" + hours;\n\n  if (minutes.length === 1) minutes = \"0\" + minutes;\n  return hours + \":\" + minutes + \" \" + notation;\n};\nexport const getDateStringFromTimestamp = timestamp => {\n  const newDate = new Date(timestamp);\n  const month = months[newDate.getMonth()];\n  return newDate.getDate() + \" \" + month + \" \" + newDate.getFullYear();\n};","map":{"version":3,"sources":["C:/Users/lenovo/github/client/src/utilities.js"],"names":["months","getDateFromTimestamp","timestamp","dueDate","Date","date","getDate","month","getMonth","year","getFullYear","todayDate","currDate","currMonth","currYear","yesterday","toString","length","getTimeFromTimestamp","newDate","hours","getHours","minutes","getMinutes","notation","getDateStringFromTimestamp"],"mappings":"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","sourcesContent":["const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\nexport const getDateFromTimestamp = (timestamp) => {\r\n    const dueDate = new Date(timestamp);\r\n    let date = dueDate.getDate();\r\n    let month = dueDate.getMonth();\r\n    let year = dueDate.getFullYear();\r\n    \r\n    const todayDate = new Date();\r\n    let currDate = todayDate.getDate();\r\n    let currMonth = todayDate.getMonth();\r\n    let currYear = todayDate.getFullYear();\r\n\r\n    if (currYear === year && currMonth === month && currDate === date) {\r\n        return \"Today\";\r\n    } \r\n    \r\n    const yesterday = new Date(timestamp - 86400000);\r\n    if (yesterday.getMonth() === todayDate.getMonth() && yesterday.getDate() === todayDate.getDate()) {\r\n        return \"Tomorrow\";\r\n    }\r\n\r\n    date = date.toString();\r\n    if (date.length === 1) date = \"0\" + date;\r\n\r\n    month = (month + 1).toString();\r\n    if (month.length === 1) month = \"0\" + month;\r\n\r\n    return date + \"/\" + month + \"/\" + year;\r\n}\r\n\r\nexport const getTimeFromTimestamp = (timestamp) => {\r\n    const newDate = new Date(timestamp);\r\n    let hours = newDate.getHours();\r\n    let minutes = newDate.getMinutes().toString();\r\n\r\n    let notation = \"am\";\r\n    if (hours === 0) {\r\n        hours = 12;\r\n    } else if (hours > 12) {\r\n        hours -= 12;\r\n        notation = \"PM\";\r\n    }\r\n\r\n    hours = hours.toString();\r\n    // if (hours.length === 1) hours = \"0\" + hours;\r\n    if (minutes.length === 1) minutes = \"0\" + minutes;\r\n\r\n    return hours + \":\" + minutes + \" \" + notation;\r\n}\r\n\r\nexport const getDateStringFromTimestamp = (timestamp) => {\r\n    const newDate = new Date(timestamp);\r\n    const month = months[newDate.getMonth()];\r\n    return newDate.getDate() + \" \" + month + \" \" + newDate.getFullYear();\r\n}"]},"metadata":{},"sourceType":"module"}